/// responsive mixin

=respondTo($media)
  @if $media == mobile
    @media (max-width: $tablet-width - 1)
      @content
  @else if $media == tablet
    @media (min-width: $tablet-width) and (max-width: $medium-desktop-width - 1)
      @content
  @else if $media == medium-desktop
    @media (min-width: $medium-desktop-width) and (max-width: $desktop-width - 1)
      @content
  @else if $media == desktop
    @media (min-width: $desktop-width) and (max-width: $wide-screen - 1)
      @content
  @else if $media == wide-screen
    @media (min-width: $wide-screen)
      @content

=css3-prefix($property, $value)
  -webkit-#{$property}: #{$value}
  -khtml-#{$property}: #{$value}
  -moz-#{$property}: #{$value}
  -ms-#{$property}: #{$value}
  -o-#{$property}: #{$value}
  #{$property}: #{$value}

=opacity($opacity: 0.5)
  $opacityMultiplied: $opacity * 100
  filter: alpha(opacity = $opacityMultiplied)
  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $opacityMultiplied + ")"
  +css3-prefix("opacity", $opacity)

/// Background images
=background-image($url-string, $repeat, $attach, $pos-value, $size)
  background: url($url-string)
  background-size: $size
  background-repeat: $repeat
  background-position: $pos-value
  background-attachment: $attach

/// Box shadow
=box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0, 0, 0, 0.4), $inset: false)
  @if $inset
    +css3-prefix("box-shadow", $inset $x $y $blur $color)
  @else
    +css3-prefix("box-shadow", $x $y $blur $color)

/// Box Sizing
/// @param {*} $type [border-box] - Type
/// @require {mixin} css3-prefix
=box-sizing($type: border-box)
  +css3-prefix("box-sizing", $type)

/// Columns
/// @param {Integer} $count [3] - Count
/// @param {Integer} $gap [10] - Gap
/// @require {mixin} css3-prefix
=columns($count: 3, $gap: 10)
  +css3-prefix("column-count", $count)
  +css3-prefix("column-gap", $gap)

/// Double Borders
/// @param {Color} $colorOne [#3C3C3C] - Color One
/// @param {Color} $colorTwo [#999999] - Color Two
/// @param {Size} $radius [0] - Radius
/// @require {mixin} css3-prefix
/// @require {mixin} border-radius
=double-borders($colorOne: #3C3C3C, $colorTwo: #999999, $radius: 0)
  border: 1px solid $colorOne
  +css3-prefix("box-shadow", 0 0 0 1px $colorTwo)
  +border-radius($radius)

=text-field
  display: inline-block
  outline: none
  text-decoration: none
  font: 14px/100% Arial, Helvetica, sans-serif
  padding: .5em
  text-shadow: 0 1px 1px rgba(0, 0, 0, 0.3)
  +rounded
  +box-shadow(0, 1px, 2px, rgba(0, 0, 0, 0.2))

=reset-margin($top: 0, $right: 0, $bottom: 0, $left: 0)
  margin: $top $right $bottom $left

=reset-padding($top: 0, $right: 0, $bottom: 0, $left: 0)
  padding: $top $right $bottom $left

/* Use this for general width and height. Default to 100% and 100%.
=width-height($width: 100%, $height: 100%)
  width: $width
  height: $height

=rounded($radius: 0.5em)
  -webkit-border-radius: $radius
  -moz-border-radius: $radius
  border-radius: $radius

=gradient($from, $to)
  background: -webkit-gradient(linear, left top, left bottom, from($from), to($to))
  background: -moz-linear-gradient(top, $from, $to)
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}')

/// Animation
/// @param {*} $str - name duration timing-function delay iteration-count direction fill-mode play-state ([http://www.w3schools.com/cssref/css3_pr_animation.asp](http://www.w3schools.com/cssref/css3_pr_animation.asp))
/// @require {mixin} css3-prefix
=animation($str)
  +css3-prefix("animation", $str)


=blur($size)
  +css3-prefix("filter", $size)

=element-inline($position, $distance)
  display: inline-block
  margin-#{$position}: $distance

=placeholder
  ::-webkit-input-placeholder
    @content
  :-moz-placeholder
    @content
  ::-moz-placeholder
    @content
  :-ms-input-placeholder
    @content

/// Transform
/// @param {List} $params - Params
/// @require {mixin} css3-prefix
=transform($params)
  +css3-prefix("transform", $params)
/// Transform-Origin
/// @param {List} $params - Params
/// @require {mixin} css3-prefix
=transform-origin($params)
  +css3-prefix("transform-origin", $params)
// Transform-Style
/// @param {List} $params - Params
/// @require {mixin} css3-prefix
=transform-style($style: preserve-3d)
  +css3-prefix("transform-style", $style)
/// Rotate
//
// / CSS Matrix Rotation Calculator http://www.boogdesign.com/examples/transforms/matrix-calculator.html
// / @param {Double} $deg [0] - Degree
// / @param {Double} $m11 [0] - M11
// / @param {Double} $m12 [0] - M12
// / @param {Double} $m21 [0] - M21
// / @param {Double} $m22 [0] - M22
// / @require {mixin} css3-prefix
=rotate($deg: 0, $m11: 0, $m12: 0, $m21: 0, $m22: 0)
  +css3-prefix("transform", rotate($deg + deg))
  filter: progid:DXImageTransform.Microsoft.Matrix( M11=#{$m11}, M12=#{$m12}, M21=#{$m21}, M22=#{$m22}, sizingMethod='auto expand')
  zoom: 1

// scale
=scale($scale)
  +transform(scale($scale))

=skew($x, $y)
  +transform(skew(#{$x}deg, #{$y}deg))

/// Transition
/// @param {List} $properties - Properties
/// @require {mixin} css3-prefix
=transition($properties...)
  @if length($properties) >= 1
    +css3-prefix("transition", $properties)
  @else
    +css3-prefix("transition", "all 0.2s ease-in-out 0s")

=vertical-align($position: relative)
  position: $position
  top: 50%
  -webkit-transform: translateY(-50%)
  -ms-transform: translateY(-50%)
  transform: translateY(-50%)


=placeholderAppend
  &::-webkit-input-placeholder
    @content
  &:-moz-placeholder
    @content
  &::-moz-placeholder
    @content
  &:-ms-input-placeholder
    @content

=iconInput
  ::-webkit-input-placeholder::before
    @content
  ::-moz-placeholder::before
    @content
  :-ms-input-placeholder::before
    @content
  input:-moz-placeholder::before
    @content
